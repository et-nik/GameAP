openapi: 3.0.0

info:
  title: "GameAP Web API"
  version: "1.0.0"
  description: |
    
    Documentation for GameAP API.
    You can find more about GameAP at [https://docs.gameap.ru](https://docs.gameap.ru).
    
    # Authentication

    GameAP API offers two forms of authentication:
      - Cookie
      - Bearer Token
    
    To generate a token, you need to go to the profile of the current user, click the button with the user in the upper 
    right corner, then open "Tokens", click "Generate New Token", enter the token name and select the necessary 
    privileges, then click "Save". Copy the token to clipboard and use it in headers in API requests.

  x-logo:
    url: 'https://raw.githubusercontent.com/gameap/gameap.github.io/master/images/gameap_logo.svg'
    altText: GameAP

tags:
  - name: servers
    description: Management of game servers, starting, stopping, restarting.
  - name: rcon
    description: Management game server by rcon
  - name: dedicated servers
    description: Management of Nodes. Obtaining information about nodes.
  - name: gdaemon tasks
    description: Management of GameAP Daemon tasks, obtaining information about tasks.
  - name: games
    description: Management of Games
  - name: game mods
    description: Game Mods management
  - name: users
    description: Users management

servers:
  - url: "{gameap-host}"
    variables:
      gameap-host:
        default: https://demo.gameap.ru
        description: GameAP Host

security:
  - cookieAuth: []
  - bearerAuth: []

paths:
  /api/dedicated_servers:
    $ref: './web-api/paths/dedicated_servers.yaml'

  /api/dedicated_servers/{dedicated_server}:
    $ref: './web-api/paths/dedicated_servers_id.yaml'

  /api/dedicated_servers/{dedicated_server}/ip_list:
    $ref: './web-api/paths/dedicated_servers_id_ip_list.yaml'

  /api/dedicated_servers/{dedicated_server}/busy_ports:
    $ref: './web-api/paths/dedicated_servers_id_busy_ports.yaml'

  /api/servers:
    $ref: './web-api/paths/servers.yaml'

  /api/servers/{server}:
    $ref: './web-api/paths/servers_id.yaml'

  /api/servers/{server}/abilities:
    $ref: './web-api/paths/servers_id_abilities.yaml'

  /api/servers/{server}/start:
    $ref: './web-api/paths/servers_id_start.yaml'

  /api/servers/{server}/stop:
    $ref: './web-api/paths/servers_id_stop.yaml'

  /api/servers/{server}/restart:
    $ref: './web-api/paths/servers_id_restart.yaml'

  /api/servers/{server}/update:
    $ref: './web-api/paths/servers_id_update.yaml'

  /api/servers/{server}/reinstall:
    $ref: './web-api/paths/servers_id_reinstall.yaml'

  /api/servers/{server}/status:
    $ref: './web-api/paths/servers_id_status.yaml'

  /api/servers/{server}/query:
    $ref: './web-api/paths/servers_id_query.yaml'

  /api/servers/{server}/console:
    $ref: './web-api/paths/servers_id_console.yaml'

  /api/servers/{server}/settings:
    $ref: './web-api/paths/servers_id_settings.yaml'

  /api/servers/search:
    $ref: './web-api/paths/servers_search.yaml'

  /api/servers/{server}/rcon/features:
    $ref: './web-api/paths/servers_id_rcon_features.yaml'

  /api/servers/{server}/rcon:
    $ref: './web-api/paths/servers_id_rcon.yaml'

  /api/servers/{server}/rcon/players:
    $ref: './web-api/paths/servers_id_rcon_players.yaml'

  /api/servers/{server}/rcon/players/kick:
    $ref: './web-api/paths/servers_id_rcon_players_kick.yaml'

  /api/servers/{server}/rcon/players/ban:
    $ref: './web-api/paths/servers_id_rcon_players_ban.yaml'

  /api/games:
    $ref: './web-api/paths/games.yaml'

  /api/games/{game}/mods:
    $ref: './web-api/paths/game_mods.yaml'

  /api/users:
    $ref: './web-api/paths/users.yaml'

  /api/users/{user}:
    $ref: './web-api/paths/users_id.yaml'

  /api/users/{user}/servers:
    $ref: './web-api/paths/users_id_servers.yaml'

  /api/users/{user}/servers/{server}/permissions:
    $ref: './web-api/paths/users_id_servers_id_permissions.yaml'

  /api/game_mods/get_list_for_game/{game}:
    $ref: './web-api/paths/games_id_mods.yaml'

  /api/gdaemon_tasks/{gdaemon_task}:
    $ref: './web-api/paths/gdaemon_tasks_id.yaml'

  /api/gdaemon_tasks/{gdaemon_task}/output:
    $ref: './web-api/paths/gdaemon_tasks_id_output.yaml'

components:
  schemas:
    User:
      $ref: './web-api/schemas/user.yaml'
    UserWithRoles:
      $ref: './web-api/schemas/user-with-roles.yaml'
    UserWithPasswordAndRoles:
      $ref: './web-api/schemas/user-with-password-and-roles.yaml'
    Server:
      $ref: './web-api/schemas/server.yaml'
    UserServer:
      $ref: './web-api/schemas/user-server.yaml'
    UserServerPermission:
      $ref: './web-api/schemas/user-server-permission.yaml'
  securitySchemes:
    cookieAuth:
      description: Auth Cookies
      type: apiKey
      in: cookie
      name: laravel_session
    bearerAuth:
      type: http
      scheme: bearer
