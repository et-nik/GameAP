put:
  summary: Save Game Server
  tags:
    - 'servers'
  parameters:
    - name: server
      in: path
      required: true
      description: 'Game Server ID'
      schema:
        type: integer
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            enabled:
              type: integer
              format: int8
              description: Set server is enabled
            installed:
              type: integer
              format: int8
              description: Set server is installed
            blocked:
              type: integer
              format: int8
              description: Set server is blocked
            name:
              type: string
              maxLength: 128
              description: The name of the server.
              example: My Awesome Server
            game_id:
              type: string
              description: The code of the game.
              example: cstrike
            ds_id:
              type: integer
              format: int64
              description: The ID of the game server provider.
              example: 1
            game_mod_id:
              type: integer
              format: int64
              description: The ID of the game mod.
              example: 1
            server_ip:
              type: string
              description: The IP address of the server.
              example: 192.168.1.1
            server_port:
              type: integer
              format: int32
              description: The port number of the game server.
              example: 27015
            query_port:
              type: integer
              format: int32
              nullable: true
              description: The port number of the game server query.
              example: 27016
            rcon_port:
              type: integer
              format: int32
              nullable: true
              description: The port number of the game server rcon.
              example: 27017
            start_command:
              type: string
              nullable: true
              description: The start command of the game server.
              example: ./start.sh
            dir:
              type: string
              nullable: true
              description: The directory path of the game server.
              example: servers/my-awesome-server
          required:
            - name
            - game_id
            - ds_id
            - game_mod_id
            - server_ip
            - server_port
  responses:
    200:
      $ref: '../responses/common-success.yaml'
    4XX:
      $ref: '../responses/common-error.yaml'
    5XX:
      $ref: '../responses/common-error.yaml'

  x-codeSamples:
    - lang: cURL
      label: CLI
      source: |
        curl -X PUT "https://demo.gameap.ru/api/servers/6" \
             -H "Content-Type: application/json" \
             -H 'Authorization: Bearer YOUR_API_KEY' \
             -d '{
                    "enabled": 1,
                    "installed": 1,
                    "blocked": 0,
                    "name": "My Awesome Server",
                    "game_id": "cstrike",
                    "ds_id": 1,
                    "game_mod_id": 1,
                    "server_ip": "
                    "server_port": 27015,
                    "query_port": 27016,
                    "rcon_port": 27017,
                    "start_command": "./start.sh",
                    "dir": "servers/my-awesome-server"
                 }'
    - lang: PHP
      source: |
        <?php

        $url = 'https://demo.gameap.ru/api/servers/6';
        $data = '{
                    "enabled": 1,
                    "installed": 1,
                    "blocked": 0,
                    "name": "My Awesome Server",
                    "game_id": "cstrike",
                    "ds_id": 1,
                    "game_mod_id": 1,
                    "server_ip": "
                    "server_port": 27015,
                    "query_port": 27016,
                    "rcon_port": 27017,
                    "start_command": "./start.sh",
                    "dir": "servers/my-awesome-server"
                 }';
        
        curl_setopt_array($curl, [
          CURLOPT_URL => $url,
          CURLOPT_CUSTOMREQUEST => 'PUT',
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_HTTPHEADER => [
            'Content-Type: application/json',
            'Authorization: Bearer ' . $apiKey,
          ],
          CURLOPT_POSTFIELDS => $data,
        ]);

        $response = curl_exec($curl);

        if (curl_errno($curl)) {
            echo 'Curl error: ' . curl_error($curl);
            exit;
        }

        curl_close($curl);
        print_r($response);

    - lang: JavaScript
      label: JavaScript fetch
      source: |
          fetch("https://demo.gameap.ru/api/servers/6", {
          "headers": {
              "accept": "application/json",
              "content-type": "application/json",
              "authorization": "Bearer " + YOUR_API_KEY
          },
          "body": '{
                      "enabled": 1,
                      "installed": 1,
                      "blocked": 0,
                      "name": "My Awesome Server",
                      "game_id": "cstrike",
                      "ds_id": 1,
                      "game_mod_id": 1,
                      "server_ip": "
                      "server_port": 27015,
                      "query_port": 27016,
                      "rcon_port": 27017,
                      "start_command": "./start.sh",
                      "dir": "servers/my-awesome-server"
                   }',
          "method": "PUT",
          });

delete:
  summary: Delete Server
  description: Delete Game Server by id. If provide `delete_files` files will be deleted also.
  tags:
    - servers
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            delete_files:
              type: boolean
              required: false
              description: Set to `true` to delete server files along with the server
              example: true
  responses:
    200:
      $ref: '../responses/common-success.yaml'
    4XX:
      $ref: '../responses/common-error.yaml'
    5XX:
      $ref: '../responses/common-error.yaml'

  x-codeSamples:
    - lang: cURL
      label: CLI
      source: |
        curl -X DELETE "https://demo.gameap.ru/api/servers/6" \
             -H "Content-Type: application/json" \
             -H 'Authorization: Bearer YOUR_API_KEY' \
             -d '{"delete_files": true}'

    - lang: PHP
      source: |
        <?php

        $url = 'https://demo.gameap.ru/api/servers/6';
        $data = '{"delete_files": true}';

        curl_setopt_array($curl, [
          CURLOPT_URL => $url,
          CURLOPT_CUSTOMREQUEST => 'DELETE',
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_HTTPHEADER => [
            'Content-Type: application/json',
            'Authorization: Bearer ' . $apiKey,
          ],
          CURLOPT_POSTFIELDS => $data,
        ]);

        $response = curl_exec($curl);

        if (curl_errno($curl)) {
            echo 'Curl error: ' . curl_error($curl);
            exit;
        }

        curl_close($curl);

        echo $response;
