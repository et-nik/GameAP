get:
  summary: Game List
  description: Get the list of available games
  tags:
    - games
  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                code:
                  type: string
                  example: "valve"
                name:
                  type: string
                  example: "Half-Life 1"
                engine:
                  type: string
                  example: "GoldSource"
                engine_version:
                  type: string
                  example: "1"
                steam_app_set_config:
                  type: string
                  nullable: true
                  example: "90 mod dod"
                steam_app_id_linux:
                  type: integer
                  example: 90
                remote_repository_linux:
                  type: string
                  nullable: true
                  example: "https://example.com/hlcs_base_linux.tar.gz"
                local_repository_linux:
                  type: string
                  nullable: true
                steam_app_id_windows:
                  type: integer
                  example: 90
                remote_repository_windows:
                  type: string
                  nullable: true
                local_repository_windows:
                  type: string
                  nullable: true
                enabled:
                  type: integer
                  minimum: 0
                  maximum: 1
                  example: 1
            example:
              - code: "valve"
                name: "Half-Life 1"
                engine: "GoldSource"
                engine_version: "1"
                steam_app_set_config: null
                steam_app_id_linux: 90
                remote_repository_linux: "https://example.com/hlcs_base_linux.tar.gz"
                local_repository_linux: "/path/to/hl-files"
                steam_app_id_windows: 90
                remote_repository_windows: "https://example.com/hlcs_base_windows.zip"
                local_repository_windows: "C:\\gameap\\repository\\hl-files"
                enabled: 1
              - code: "op4"
                name: "Half-Life: Opposing Force"
                engine: "GoldSource"
                engine_version: "1"
                steam_app_set_config: "90 mod gearbox"
                steam_app_id_linux: 90
                remote_repository_linux: null
                local_repository_linux: null
                steam_app_id_windows: 90
                remote_repository_windows: null
                local_repository_windows: null
                enabled: 1
    4XX:
      $ref: '../responses/common-error.yaml'
    5XX:
      $ref: '../responses/common-error.yaml'
  x-codeSamples:
    - lang: 'cURL'
      label: 'CLI'
      source: |
        curl --request GET \
        --url 'https://demo.gameap.com/api/games' \
        --header 'Content-Type: application/json: ' \
        --header 'Authorization: Bearer YOUR_API_KEY'
    - lang: 'PHP'
      source: |
        <?php

        $url = 'https://demo.gameap.com/api/games';
        $apiKey = 'YOUR_API_KEY';

        $curl = curl_init();

        curl_setopt_array($curl, [
          CURLOPT_URL => $url,
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => '',
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 0,
          CURLOPT_FOLLOWLOCATION => true,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => 'GET',
          CURLOPT_HTTPHEADER => [
            'Content-Type: application/json',
            'Authorization: Bearer ' . $apiKey,
          ],
        ]);

        $response = curl_exec($curl);

        if (curl_errno($curl)) {
            echo 'Curl error: ' . curl_error($curl);
            exit;
        }

        curl_close($curl);

        $result = json_decode($response, true);
        print_r($result);
    - lang: 'GO'
      source: |
        package main

        import (
        "fmt"
        "io"
        "net/http"
        "os"
        )

        func main() {
          url := "https://demo.gameap.com/api/games"
          apiKey := "YOUR_API_KEY"

          client := &http.Client{}

          req, err := http.NewRequest("GET", url, nil)
          if err != nil {
            fmt.Println(err)
            return
          }

          req.Header.Add("Content-Type", "application/json")
          req.Header.Add("Authorization", "Bearer "+apiKey)

          resp, err := client.Do(req)
          if err != nil {
            fmt.Println(err)
            return
          }
          defer resp.Body.Close()

          body, err := io.ReadAll(resp.Body)
          if err != nil {
            fmt.Println(err)
            return
          }

          fmt.Println(string(body))
        }
    - lang: "NodeJS"
      source: |
        const request = require('request');

        const url = 'https://demo.gameap.com/api/games';
        const apiKey = 'YOUR_API_KEY';

        const headers = {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + apiKey
        };

        request.get({
          url: url,
          headers: headers
        }, (error, response, body) => {
          if (error) {
            console.log(error);
          } else {
            console.log(body);
          }
        });
